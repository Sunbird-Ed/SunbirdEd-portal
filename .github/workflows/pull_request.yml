name: Code Quality Checks

# on:
#   pull_request:
#     branches:
#       - '**'

on:
  push:
    branches:
      - '*'

jobs:
  # setup:
  #   name: Setup Environment
  #   runs-on: ubuntu-latest
  #   outputs:
  #     cache-hit: ${{ steps.cache.outputs.cache-hit }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'

  #     - name: Restore node_modules cache
  #       id: cache
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-modules-

  #     - name: Install dependencies
  #       run: yarn install
  #       working-directory: src/app/client

  #     - name: Save node_modules cache
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Restore node_modules cache
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install
        working-directory: src/app/client
      
      - name: Save node_modules cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run lint
        run: npm run lint
        working-directory: src/app/client

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Restore node_modules cache
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: yarn install
        working-directory: src/app/client
      
      - name: Save node_modules cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run test shard ${{ matrix.shard }}
        run: npm run test:ci -- --shard=${{ matrix.shard }}/4
        working-directory: src/app/client
        
      # - name: Run test
      #   run: npm run test:ci
      #   working-directory: src/app/client
