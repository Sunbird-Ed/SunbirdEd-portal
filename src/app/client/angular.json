{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "src": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "../dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "tsConfig": "src/tsconfig.app.json",
            "polyfills": "src/polyfills.ts",
            "assets": [
              "src/assets/images",
              "src/assets/libs",
              "src/assets/cdnHelper.js",
              "src/assets/health-check.json",
              "src/assets/SampleUserCsv.csv",
              "src/thirdparty",
              "src/favicon.png",
              {
                "glob": "**/*.*",
                "input": "./node_modules/@project-sunbird/common-consumption-v8/assets",
                "output": "./assets/common-consumption"
              },
              {
                "glob": "**/*.*",
                "input": "./node_modules/@project-sunbird/discussions-ui-v8/assets",
                "output": "./assets/discussion-ui"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/@project-sunbird/sunbird-pdf-player-v8/lib/assets/",
                "output": "/assets/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/@project-sunbird/sunbird-video-player-v8/lib/assets/",
                "output": "/assets/"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/@project-sunbird/sunbird-question-editor/lib/assets/",
                "output": "/assets/"
              }
            ],
            "styles": [
              "src/assets/quml-styles/quml-carousel.css",
              "node_modules/datatables.net-dt/css/jquery.dataTables.min.css",
              "src/assets/styles/semantic/semantic.min.css",
              "node_modules/font-awesome/css/font-awesome.css",
              "./node_modules/@project-sunbird/sb-styles/assets/_styles.scss",
              "./node_modules/leaflet/dist/leaflet.css",
              "src/assets/styles/styles.scss",
              "node_modules/video.js/dist/video-js.min.css",
              "./node_modules/@project-sunbird/discussions-ui-v8/assets/styles/global.scss",
              "node_modules/katex/dist/katex.min.css"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "src/assets/styles/"
              ]
            },
            "scripts": [
              "node_modules/epubjs/dist/epub.js",
              "src/assets/libs/iziToast/iziToast.min.js",
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/slick-carousel/slick/slick.min.js",
              "node_modules/@project-sunbird/telemetry-sdk/index.js",
              "src/assets/libs/semantic-ui/sidebar.min.js",
              "node_modules/leaflet/dist/leaflet.js",
              "./node_modules/katex/dist/katex.min.js",
              "node_modules/jquery.fancytree/dist/jquery.fancytree-all-deps.min.js",
              "src/assets/libs/semantic-ui/modal.min.js",
              {
                "input": "src/assets/libs/semantic-ui/transition.min.js",
                "lazy": true,
                "bundleName": "semanticDropdown"
              },
              {
                "input": "src/assets/libs/semantic-ui/dropdown.min.js",
                "lazy": true,
                "bundleName": "semanticDropdown"
              },
              {
                "input": "src/assets/libs/semantic-ui/transition.min.js",
                "lazy": true,
                "bundleName": "semanticModal"
              },
              {
                "input": "src/assets/libs/semantic-ui/dimmer.min.js",
                "lazy": true,
                "bundleName": "semanticModal"
              },
              {
                "input": "src/assets/libs/semantic-ui/modal.min.js",
                "lazy": true,
                "bundleName": "semanticModal"
              },
              {
                "input": "src/assets/libs/semantic-ui/transition.min.js",
                "lazy": true,
                "bundleName": "semanticTreePicker"
              },
              {
                "input": "src/assets/libs/semantic-ui/dimmer.min.js",
                "lazy": true,
                "bundleName": "semanticTreePicker"
              },
              {
                "input": "src/assets/libs/semantic-ui/modal.min.js",
                "lazy": true,
                "bundleName": "semanticTreePicker"
              },
              {
                "input": "src/assets/libs/semantic-ui-tree-picker/semantic-ui-tree-picker.js",
                "lazy": true,
                "bundleName": "semanticTreePicker"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": false,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ]
            },
            "staging": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": false,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.staging.ts"
                }
              ]
            },
            "desktop-production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": false,
              "vendorChunk": false,
              "buildOptimizer": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.desktop.prod.ts"
                }
              ]
            },
            "desktop-staging": {
              "optimization": false,
              "outputHashing": "all",
              "sourceMap": true,
              "extractCss": false,
              "namedChunks": true,
              "aot": false,
              "extractLicenses": false,
              "vendorChunk": false,
              "buildOptimizer": false,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.desktop.staging.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "src:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "src:build:production"
            },
            "staging": {
              "browserTarget": "src:build:staging"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "src:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "karmaConfig": "karma.conf.js",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.spec.json",
            "sourceMap": true,
            "scripts": [
              "node_modules/epubjs/dist/epub.js",
              "src/assets/libs/iziToast/iziToast.min.js",
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/@project-sunbird/telemetry-sdk/index.js",
              "src/assets/libs/semantic.min.js",
              "node_modules/jquery.fancytree/dist/jquery.fancytree-all-deps.min.js",
              "node_modules/leaflet/dist/leaflet.js"
            ],
            "styles": [
              "src/assets/styles/semantic/semantic.min.css",
              "node_modules/font-awesome/css/font-awesome.css",
              "src/assets/styles/styles.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "src/assets/styles/"
              ]
            },
            "assets": [
              "src/assets",
              "src/thirdparty",
              "src/favicon.png"
            ],
            "codeCoverageExclude": [
              "src/assets/**",
              "src/thidparty/**",
              "src/app/modules/offline/**",
              "src/app/modules/**/**/index.ts",
              "src/app/plugins/profile/index.ts",
              "src/app/plugins/profile/services/index.ts",
              "src/app/testUtil/index.ts",
              "src/app/client/src/**/*.spec.ts",
              "src/app/client/src/**/*.spec.data.ts",
              "src/app/client/src/**/*.module.ts",
              "src/app/modules/cbse-program/**/**"

            ]
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "src/tsconfig.app.json",
              "src/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    }
  },
  "defaultProject": "src",
  "schematics": {
    "@schematics/angular:component": {
      "prefix": "app",
      "styleext": "scss"
    },
    "@schematics/angular:directive": {
      "prefix": "app"
    }
  }
}
