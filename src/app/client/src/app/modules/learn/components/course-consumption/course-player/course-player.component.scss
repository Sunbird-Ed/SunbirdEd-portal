@import "variables";
@import "mixins/mixins";
@import "pages/course-player";

.course-list_title {
  color: var(--gray-800);
  font-size: calculateRem(14px);
  font-weight: bold;
  line-height: calculateRem(24px);
}

// content header bar
.content-header {
  &__img {
    overflow: hidden;
    img {
      width: calculateRem(48px);
    }
  }
  &__title {
    color: var(--primary-color);
    font-size: calculateRem(18px);
    font-weight: bold;
  }
  &__info {
    color: var(--gray-800);
    font-size: calculateRem(14px);
  }
}

.course-list-progress {
  padding: calculateRem(16px);
  &__title {
    color: var(--gray-800);
    font-size: calculateRem(12px);
  }
  &__status {
    color: var(--primary-color);
    font-size: calculateRem(14px);
    font-weight: bold;
  }
  &__barholder {
    margin: 0px;
    height: calculateRem(8px);
  }
  &__info {
    color: var(--gray-800);
    font-size: calculateRem(12px);
  }
}

:host ::ng-deep {
  .ui.progress .bar {
    height: calculateRem(8px) !important;
    background-color: var(--secondary-200) !important;
  }
}

.header-shadow {
  min-height: calculateRem(80px);
  background-color: var(--rc-FAFAFA);
  box-shadow: 0 calculateRem(10px) calculateRem(10px) calculateRem(-10px) rgba(var(--rc-rgba-black), 0.25);
  z-index: 99;
}
.chapter-box {
  border-bottom: .0625rem solid var(--gray-100);
  // padding: calculateRem(16px);
  border-radius: calculateRem(2px);
  &:last-child{
    border-bottom: 0px solid var(--gray-100);
    padding-bottom:0px;
  }
}


.sb-course-details {
  .certified-course__certificate {
    background-color: var(--rc-E5EDF5);
  }
}

:host::ng-deep {
  .batch-details {
    &__dropdown {
      .selection {
        &.ui.dropdown {
          color: var(--primary-color);
          &:not(.button) > .default.text {
            padding: calculateRem(6px) 0;
            color: var(--primary-color);
          }
        }
        &.ui.selection.dropdown > .dropdown.icon, .ui.selection.dropdown > .search.icon {
          font-size: calculateRem(16px);
          padding: calculateRem(8px);
        }
      }
    }
  }

  .certified-course__progress {
    .ui.progress .bar {
      height: calculateRem(8px) !important;
      background: var(--secondary-color);
    }
  }

  .sbaccordion.sbaccordion--toc {    
    .sbaccordion__panel-header__title {
      display: flex !important;
      align-items: center;
      padding: calculateRem(8px) 0 !important;
    }
  }
}

@include respond-below(sm) {
  .certified-course__btn {
    margin-top: calculateRem(8px);
  }
}

// Progress Circle

$progressCircle:
xs calculateRem(16px) 4px 10px,
sm calculateRem(24px) 6px 10px,
md calculateRem(40px) 12px 10px,
lg calculateRem(56px) 16px 14px,
xl calculateRem(72px) 20px 18px,
xxl calculateRem(88px) 24px 20px;
@each $size, $shapeSize, $strokeSize, $fontSize in $progressCircle {
  .progress-circle--#{$size} {
    height: $shapeSize;
    width: $shapeSize;
    .progress-circle__stroke {
      stroke-width: calculateRem($strokeSize);
    }
    span {
      font-size: calculateRem($fontSize);
    }
  }
}
.progress-circle {
  height: calculateRem(32px);
  width: calculateRem(32px);
  position: relative;
  span {
    position: absolute;
    font-size: calculateRem(8px);
    font-weight: bold;
    margin: 0 auto;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  &__svg {
    border-radius: 50%;
    height: 100%;
    transform: scaleX(-1) rotate(-90deg);
    width: 100%;
  }
  &__stroke {
    fill: none;
    stroke-width: calculateRem(8px);
  
    &:nth-child(1) {
      stroke: var(--secondary-200);
    }
    
    &:nth-child(2) {
      stroke: var(--gray-100);
      stroke-dasharray: 314.1592%;
    }
  }
  &--xs, &--sm {
    span {
      display: none;
    }
  }
  @each $size, $shapeSize, $strokeSize, $fontSize in $progressCircle {
    &.progress-circle--#{$size} {
      height: #{$shapeSize};
      width: #{$shapeSize};
      .progress-circle__stroke {
        stroke-width: calculateRem($strokeSize);
      }
      span {
        font-size: calculateRem($fontSize);
      }
    }
  }
  @for $i from 0 to 100 {
    &[data-percentage="#{$i}"] {
      .progress-circle__stroke:nth-child(2) {
        stroke-dashoffset: calc(314.1592% * (#{$i} / 100));
      }
    }
  }
}