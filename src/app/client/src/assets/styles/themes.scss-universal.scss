@use "~@angular/material" as mat;


// Define a custom mixin that takes in the current theme
@mixin theme-color-grabber($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);

  // Create theme specfic styles
  .sb-mat-primary {
    background-color: mat-color($primary);
  }
  .sb-mat-accent {
    background-color: mat-color($accent);
  }
  .sb-mat-warn {
    background-color: mat-color($warn);
  }
  .sb-mat-background {
    background-color: mat-color($background, background);
  }
}


// dark background related
@mixin darkbgTheme($dbgtheme) {
    // Extract the palettes you need from the theme definition.
    $primary: map-get($dbgtheme, primary);
    $accent: map-get($dbgtheme, accent);
    // $foreground: map-get($dbgtheme, foreground);
    // $background: map-get($dbgtheme, background);

    // Define any styles affected by the theme.
    .mat-app-background,
    .sbt-mat-background,.sbt-fluid-content-bg, .sb-section-preference,
    .sbt-filter-bar,.new-layout-footer {
      // Use mat-color to extract individual colors from a palette.
      background-color: mat-color($primary, 900) !important;
      // color: mat-color($foreground, text) !important;
    }
  
    .sbt-mat-surface, .new-layout-footer .sbt-container,
    .sbt-page-content-area {
      background: mat-color($primary, 800) !important;
      // color: mat-color($foreground, text) !important;
    }
  }


  // accessbility bar theme (note: when we are using primary, accent color attributes)
  .accessibility-toolbar-theme {
    $primary: mat.define-palette(mat.$grey-palette);
    $accent: mat.define-palette(mat.$grey-palette, 500);
    $warn: mat.define-palette(mat.$grey-palette);
    $accessibility-toolbar-theme: mat.define-light-theme($primary, $accent, $warn);
    $accessibility-toolbar-theme: mat.define-dark-theme($primary, $accent, $warn);
    @include mat.toolbar-theme($accessibility-toolbar-theme);
  }

  @mixin theme-mat-card($theme) {
    // Parse the theme and create variables for each color in the pallete
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $background: map-get($theme, background);

    $primary: mat.define-palette(mat.$cyan-palette);
    $accent: mat.define-palette(mat.$cyan-palette, 500);
    .cardSlick .mat-card{
      width: 20rem;
    }
    .mat-card{
      background-color: mat-color($primary, 50);
    }
    .mat-card .mat-chip-list-wrapper{
      display: initial;
      margin: 0;
    }
    .mat-card-header-text{
      overflow: hidden;
    }
  }

  // .my-alternate-theme {
  //   $my-alternate-primary: mat.define-palette(mat.$red-palette);
  //   $my-alternate-accent: mat.define-palette(mat.$green-palette, 400);
  //   $my-alternate-warn: mat.define-palette(mat.$grey-palette);
  //   $my-alternate-theme: mat.define-light-theme($my-alternate-primary, $my-alternate-accent, $my-alternate-warn);
    
  //   @include mat.all-component-themes($my-alternate-theme);

  // }


  // @mixin panel-theme($theme) {
  //   $primary: map-get($theme, primary);
  //   $accent: map-get($theme, accent);
  //   $warn: map-get($theme, warn);
  //   $background: map-get($theme, background);
  //   $foreground: map-get($theme, foreground);
  //   .panel {
  //       border: none;
  //       &-heading {
  //           background: mat-color($mat-grey, 0) !important;
  //           h4 span {
  //               color: mat-color($mat-grey, 700);
  //               border-bottom: 1px solid mat-color($primary, 500);
  //           }
  //       }
  //       &-body {
  //           background: mat-color($mat-grey, 0);
  //       }
  //       &-footer {
  //           background: mat-color($mat-grey, 100) !important;
  //       }
  //   }




//   // Theme configuration merge
// $primary: mat-palette($mat-blue, 800, 500, 900);
// $accent:  mat-palette($mat-blue, A200, A100, A400);
// $warn: mat-palette($mat-red);

// $theme: mat-light-theme($primary, $accent, $warn);

// // Custom colors
// $custom-colors: (
//   custom-color-a: mat-color($mat-green, 700),
//   custom-color-b: mat-color($mat-red, 400),
// );
// $theme: map-merge($theme, (custom-colors: $custom-colors));

// .custom-class-a {
//   background-color: map-get($custom-colors, custom-color-a);
//   color: map-get($custom-colors, custom-color-b);
// }