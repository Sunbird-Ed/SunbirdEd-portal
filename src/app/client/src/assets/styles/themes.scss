html.transition,
html.transition *,
html.transition *:before,
html.transition *:after {
  transition: all 100ms !important;
  transition-delay: 0 !important;
}
.container2 {
input.checkbox{
  height: 0;
  width: 0;
  visibility: hidden;
}
.label {
  cursor: pointer;
  text-indent: -9999px;
  width: 52px;
  height: 27px;
  background: grey;
  float: right;
  border-radius: 100px;
  position: relative;
}
.label:after {
  content: '';
  position: absolute;
  top: 3px;
  left: 3px;
  width: 20px;
  height: 20px;
  background: #fff;
  border-radius: 90px;
  transition: 0.3s;
}
input.checkbox:checked + label {
  background: var(--color-headings);
}
input.checkbox:checked + label:after {
  left: calc(100% - 5px);
  transform: translateX(-100%);
}
label:active:after {
  width: 45px;
}
  background:#000;
  overflow:hidden;
  position: fixed;
    bottom: 24px;
    left: 0px;
    z-index: 99999;
    border-radius: 50px;
    right: 0px;
    max-width: 400px;
    margin: 0 auto;
    @include respond-below(sm) {
    margin: 0 10px;
    }
  ul{
    list-style: none;
    margin: 0;
    padding: 0;
    overflow: auto;
    display: flex;
    li {
      color: #AAAAAA;
      display: block;
      position: relative;
      float: left;
      // width: 100%;
      height: 100px;
      border-bottom: 1px solid #333;
      margin-bottom: 0px;white-space: nowrap;
      height:auto;
      input[type=radio]{
        position: absolute;
        visibility: hidden;
      }
      label{
        display: block;
        position: relative;
        font-weight: 300;
        font-size: 1em;
        padding: 12px 12px 12px 48px;
        margin-bottom: 0px;
        z-index: 9;
        cursor: pointer;
        -webkit-transition: all 0.25s linear;
      }
      &:hover label{
        color: #FFFFFF;
      }
      .check{
        display: block;
        position: absolute;
        border: 5px solid #AAAAAA;
        border-radius: 100%;
        height: 25px;
        width: 25px;
        top: 12px;
        left: 20px;
        z-index: 5;
        transition: border .25s linear;
        -webkit-transition: border .25s linear;
        &::before {
          display: block;
          position: absolute;
          content: '';
          border-radius: 100%;
          height: 9px;
          width: 9px;
          top: 3px;
          left: 3px;
          margin: auto;
          transition: background 0.25s linear;
          -webkit-transition: background 0.25s linear;
        }
      }
      &:hover .check {
        border: 5px solid #FFFFFF;
      }
    }
  }
}
html[data-theme='Default'] {
  // --sbt-bg:var(--primary-color);
  // --sbt-body-bg:var(--primary-0);
  // --sbt-text-gray-color: var(--gray-800);
  // --sbt-text-white-color: var(--gray-800);
  // --sbt-category-header-color: var(--gray-800);
  // --sbt-section-header-color: var(--primary-color);
  // --sbt-primary-border:var(--primary-color); // % with percentage value
  // --sbt-gray-border: var(--gray-800); // % with percentage value
  --sbt-body-bg:#E5EDF5;
  --sbt-header-bg:var(--primary-300);
  --sbt-menu-bg:var(--sbt-header-bg);
  --sbt-page-header-bg:var(--sbt-menu-bg);
  --sbt-body-bg2:#f0f7ff;
  --sbt-box-shadow-black:rgba(0, 0, 0, 0.1);
  --sbt-box-shadow:rgba(128, 167, 206, 1);
  --sbt-theme-purple-selectbox:#6841B3;
  --sbt-theme-green-selectbox:#008840;
  --sbt-theme-purple-selectbox-lbg:#E5EDF5;
  --sbt-theme-green-selectbox-lbg:#E0F5EA;
}
html[data-theme='Orange'] {
  --primary-color:#E7800B;
  --primary-300:#FFB561;
  --primary-200:#D4A56F;
  --primary-100:#ffe081;
  --sbt-body-bg:#EAE1D7;
  --sbt-header-bg:var(--primary-300);
  --sbt-menu-bg:var(--sbt-header-bg);
  --sbt-page-header-bg:var(--sbt-menu-bg);
  --sbt-body-bg2:#F9F0E6;
  --sbt-box-shadow-black:rgba(0, 0, 0, 0.1);
  --sbt-box-shadow:rgb(212, 165, 111, 1);
  --sbt-theme-purple-selectbox:#6841B3;
  --sbt-theme-green-selectbox:#008840;
  --sbt-theme-purple-selectbox-lbg:#E5EDF5;
  --sbt-theme-green-selectbox-lbg:#E0F5EA;
}

input[type=radio]:checked ~ .check {
  border-color: var(--primary-color);
}
input[type=radio]:checked ~ .check::before{
  background: var(--primary-color);
}
input[value=Brown]:checked ~ .check,
input[value=Bluegray]:checked ~ .check,
input[value=Orange]:checked ~ .check {
  border-color: var(--primary-color);
}
input[value]:checked ~ .check::before{
  background: var(--primary-color);
}
input[value]:checked ~ label{
  color: var(--primary-color);
}
