/**
* Created at 1397/12/14 (2019/3/5).
* @author {@link https://mirismaili.github.io S. Mahdi Mir-Ismaili}
*/

// @import '~@angular/material/theming';
// @include mat-core();

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "~@angular/material" as mat;
@use "./color-palette.scss" as cmat;
@use "sass:map";

mat.$theme-ignore-duplication-warnings: true;

// Plus imports for other components in your app.
@import "./themes.scss-universal.scss";
@import "./../../app/app.component.scss-theme.scss";
@import "./../../app/modules/content-search/components/no-result/no-result.component.scss-theme.scss";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

/* custom mixins ends here */
/**
* Define your custom themes in this map. 
* The `key` of each member is the name of CSS class for that theme. 
* To better understanding the schema of the map, see `@each` loop below and especially pay attention to 
* `map-has-key()` functions.
*/
$app-themes: (
  deeppurple-amber: (
    primary-base: $mat-deep-purple,
    accent-base: $mat-amber,
    typography:
      mat.define-typography-config(
        $font-family: serif !important,
      ),
  ),
  indigo-pink: (
    primary-base: $mat-indigo,
    accent-base: $mat-pink,
    typography:
      mat.define-typography-config(
        $font-family: monospace !important,
      ),
  ),
  pink-bluegrey: (
    primary-base: $mat-pink,
    accent-base: $mat-blue-gray,
    typography:
      mat.define-typography-config(
        $font-family: sans-serif !important,
      ),
  ),
  purple-green: (
    primary-base: $mat-purple,
    accent-base: $mat-green,
    typography:
      mat.define-typography-config(
        $font-family: fantasy !important,
      ),
  ),
  joy: (
    primary-base: cmat.$mat-joy,
    accent-base: cmat.$mat-joy-accent,
    typography:
      mat.define-typography-config(
        $font-family: var(--font-stack-en) !important,
      ),
  ),
);

@each $css-class, $theme in $app-themes {
  $primary: if(
    map-has-key($theme, primary),
    map-get($theme, primary),
    mat-palette(map-get($theme, primary-base))
  );
  $accent: if(
    map-has-key($theme, accent),
    map-get($theme, accent),
    mat-palette(map-get($theme, accent-base))
  );
  $warn: if(
    map-has-key($theme, warn),
    map-get($theme, warn),
    mat-palette(
      if(map-has-key($theme, warn-base), map-get($theme, warn-base), $mat-red)
    )
  );
  $typography: if(
    map-has-key($theme, typography),
    map-get($theme, typography),
    mat-config(
      if(
        map-has-key($config, typography),
        map-get($config, typography),
        typography
      )
    )
  );

  .#{$css-class} {
    @include mat.all-component-themes(
      mat-light-theme($primary, $accent, $warn)
    );
    @include app-root-theme(mat-light-theme($primary, $accent, $warn));
    @include no-result-component(mat-light-theme($primary, $accent, $warn));
    @include mat.all-component-typographies($typography);

    $ColorGrabber: mat-light-theme($primary, $accent, $warn);
    @include theme-color-grabber($ColorGrabber);
    
    $matCardTheme: mat-light-theme($primary, $accent, $warn);
    @include theme-mat-card($matCardTheme);

    // .theme-dependent-colors {
    // 	background: mat-color($primary);
    // 	color: mat-color($accent);
    // }

    // .background {
    // 	padding: 0rem;
    //   // background-color: mat-color($background, background);
    // 	color: mat-color($accent);
    // }

    $primary100: mat-color($primary, 100);
    $primary200: mat-color($primary, 200);
    $accent1: mat-color($accent);
    $warn1: mat-color($warn);
    // $fg_palette:map-get($my-theme-dark, foreground);
    // $bg_palette:map-get($my-theme-dark, background);
    // $fg:map-get($fg_palette, text);
    // $bg:map-get($bg_palette, background);
  
    // --primary: #{$primary};
    // --accent: #{$accent};
    // --warn: #{$warn};
    // --fg: #{$fg};
    // --bg: #{$bg};

    --sbt-body-bg: #{$primary100}; 
    --sbt-body-bg2: #{$primary200}; 
    // --sbt-footer-bg: #{$primary, 100};
    --sb-profile-bg-c-4:var(--sbt-body-bg);
    .mat-app-background, .new-layout-footer {
      background: mat-color($primary, 100) !important;
    }
    .accessibility_toolbar {
      // background-color: mat-color($status-bar, status-bar);
      // background-color: mat-color($dbgprimary, 800);
      // color: mat-color($light-primary-text);
    }
    .sb-icon {
      background-color: mat-color($accent);
    }

    // .mat-app-background,
    // .sbt-mat-background,
    // .sbt-filter-bar,
    // footer, .sb-section-preference {
    //   background: mat-color($primary, 100) !important;
    //   //background: mat-color($background, background) !important;
    // }
    
    // .sbt-mat-surface,
    // .sbt-page-content-area, .new-layout-footer .sbt-container {
    //   background: mat-color($primary, 200) !important;
    //   //background: mat-color($background, background) !important;
    // }
  }

  .#{$css-class}-dark {
    @include mat.all-component-themes(mat-dark-theme($primary, $accent, $warn));
    @include app-root-theme(mat-dark-theme($primary, $accent, $warn));
    @include mat.all-component-typographies($typography);

    // dark background related
    $dbgprimary: mat-palette(mat.$grey-palette, 500, 800, 900);
    $dbgaccent: mat-palette(mat.$grey-palette, 700);
    $dbgtheme: mat-dark-theme($dbgprimary, $dbgaccent);
    @include darkbgTheme($dbgtheme);

    @include no-result-component(mat-dark-theme($primary, $accent, $warn));

    --sb-section-preference:var(--white);
  }

    // .theme-primary.#{$css-class} {
    //   background-color: mat-color($primary);
    // }

    // .theme-accent.#{$css-class} {
    //   background-color: mat-color($accent);
    // }

    // .theme-warn.#{$css-class} {
    //   background-color: mat-color($warn);
    // }
}
