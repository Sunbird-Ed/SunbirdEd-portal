/**
 * Created at 1398/4/27 (2019/7/18).
 * @author {@link https://mirismaili.github.io S. Mahdi Mir-Ismaili}
 */

/**
 * @param $themes-map - Custom themes should be passed via this argument.
 * The "key" of each member is "the name of CSS class for that theme".
 *
 * Full schema of each member:
 *     css-class-name: (
 *         primary-base: base-palette,   // example: $mat-purple  // will be ignored if you set corresponding mat-palette (primary). Set it to `null` in this case.
 *         accent-base:  base-palette,   // example: $mat-green   // will be ignored if you set corresponding mat-palette (accent). Set it to `null` in this case.
 *         warn-base?:   base-palette,   // DEFAULT: $mat-red     // will be ignored if you set corresponding mat-palette (warn). Set it to `null` in this case.
 *         primary?: mat-palette,   // DEFAULT: mat-palette(primary-base)
 *         accent?:  mat-palette,   // DEFAULT: mat-palette(accent-base)
 *         warn?:    mat-palette,   // DEFAULT: mat-palette(warn-base)
 *         light-or-dark?: {'light' | 'dark' | ''},   // DEFAULT: '' => "Both light & dark"
 *     ),
 *
 * @see `mat-palette()`: https://github.com/angular/components/blob/dcde115980a2e94fae8e667d1dfa300fc82a77cb/src/material/core/theming/_theming.scss#L12-L37
 * @see https://material.angular.io/guide/theming
 */
//noinspection SassScssUnresolvedMixin, SassScssResolvedByNameOnly
@mixin make-stylesheets($app-themes) {

  @each $css-class,
  $theme in $app-themes {

    $primary-base: map-get($theme, primary-base);
    $accent-base: map-get($theme, accent-base);
    $warn-base: if(map-has-key($theme, warn-base), map-get($theme, warn-base), $mat-red);


    //   $primary: if(map-has-key($theme, primary), map-get($theme, primary), mat-palette($primary-base));
    //   $accent: if(map-has-key($theme, accent), map-get($theme, accent), mat-palette($accent-base));
    //   $warn: if(map-has-key($theme, warn), map-get($theme, warn), mat-palette($warn-base));

    $primary: if(map-has-key($theme, primary),
        map-get($theme, primary),
        mat.define-palette(map-get($theme, primary-base)));
    $accent: if(map-has-key($theme, accent),
        map-get($theme, accent),
        mat.define-palette(map-get($theme, accent-base)));
    $warn: if(map-has-key($theme, warn),
        map-get($theme, warn),
        mat.define-palette(if(map-has-key($theme, warn-base), map-get($theme, warn-base), mat.$red-palette)));
    $background: if(map-has-key($theme, background),
        map-get($theme, background),
        mat.define-palette(if(map-has-key($theme, background),
            map-get($theme, background),
            $background)));
    $foreground: if(map-has-key($theme, foreground),
        map-get($theme, foreground),
        mat.define-palette(if(map-has-key($theme, foreground),
            map-get($theme, foreground),
            $foreground)));
    $typography: if(map-has-key($theme, typography),
        map-get($theme, typography),
        mat-config(if(map-has-key($config, typography),
            map-get($config, typography),
            typography)));


    $light-or-dark: if(map-has-key($theme, light-or-dark), map-get($theme, light-or-dark), '');

    // Light-themes:
    @if $light-or-dark=='' or $light-or-dark=='light' or $light-or-dark=='l' or $light-or-dark=='both' {
 
          /* #{$css-class} starts here */
  .#{$css-class} {
   
    // dark theme
    @if $css-class=="pink-bluegrey" or $css-class== "purple-green" or $css-class =="green-grey" {
      @include mat.all-component-colors(
        mat-dark-theme($primary, $accent, $warn)
      );
      @include mat.strong-focus-indicators-theme(mat-dark-theme($primary, $accent, $warn));
      $primary100: map-get($background, background); // mat-color($accent, 900);
      $primary200: #232323;
      $accent500: mat-color($accent, 500);
      --sbt-body-bg: #{$primary100};
      --sbt-body-bg2: #{$primary200}; // 232323
      --sb-profile-bg-c-4: var(--sbt-body-bg);
      --sbt-footer-bg: var(--sbt-body-bg2);
      --cc-grade-pill-container-bg: var(--sbt-body-bg);
      --sbt-compt-bg: var(--sbt-body-bg);
      --sb-modal-content-bg: var(--sbt-body-bg);
      --sb-modal-actions-bg: var(--sbt-body-bg);
      --cc-chapter-bg: var(--sbt-body-bg2);
      --sb-section-preference: var(--white);
      --sbt-footer-info-links: var(--white);
      --sbt-filter-bar-bg: var(--sbt-body-bg);
      --primary-color: #{$accent500};
    } 
    // individual theme changes
    // @if $css-class=="joy" {
    //   @include mat.all-component-colors(mat-light-theme($primary, $accent, $warn));
    //   --sbt-body-bg: #e9e8d9;
    //   --sbt-body-bg2: #f3f3e5;
    //   .mat-app-background {
    //     background: var(--sbt-body-bg);
    //   }
    // }
    // light theme
    @else {
      $app-themes: mat-light-theme($primary, $accent, $warn);
      // .custom-btn-bg {
      //   background: mat-color(mag_get($app-themes, primary, darker));
      // }
      @include mat.all-component-themes($app-themes);
      @include mat.strong-focus-indicators-theme(mat-light-theme($primary, $accent, $warn));
      @include app-root-theme(mat-light-theme($primary, $accent, $warn));
      // @include no-result-component(mat-light-theme($primary, $accent, $warn));
      @include mat-expansion-panel($theme);
  
      $ColorGrabber: mat-light-theme($primary, $accent, $warn);
      @include theme-color-grabber($ColorGrabber);
      $matCardTheme: mat-light-theme($primary, $accent, $warn);
      @include theme-mat-card($matCardTheme);
      $matModal: mat-light-theme($primary, $accent, $warn);
      @include theme-mat-modal($matModal);
      $themematsidebar: mat-light-theme($primary, $accent, $warn);
      @include theme-mat-sidebar($themematsidebar);
      $primary50: mat-color($primary, 50);
      $primary100: mat-color($primary, 100);
      $primary200: mat-color($primary, 200);
      $accent500: mat-color($accent, 500);
  
      // $accent500: mat-color($accent, 500);
      // $warn500: mat-color($warn);
      --sbt-body-bg: #{$primary50};
      --sbt-body-bg2: #{$primary100};
      --sb-profile-bg-c-4: var(--sbt-body-bg);
      --sbt-footer-bg: var(--sbt-body-bg2);
      --cc-grade-pill-container-bg: var(--sbt-body-bg);
      --sb-modal-content-bg: var(--sbt-body-bg);
      --sb-modal-actions-bg: var(--sbt-body-bg);
      --sbt-compt-bg: var(--sbt-body-bg);
      --cc-chapter-bg: var(--sbt-body-bg2);
      --sbt-filter-bar-bg: var(--sbt-body-bg);
      --primary-color: #{$accent500};
      $primary500: mat-color($primary);
      --sbt-header-bg: #{$primary500};
  
      .mat-app-background,
      .new-layout-footer {
        background: mat-color($primary, 50) !important;
      }
    }
  
    $mat-theme: mat-light-theme($primary, $accent, $warn);
    //   @include angular-material-theme($mat-theme);
    @include mat.all-component-themes($mat-theme);
    
    @if mixin-exists(themed-stylesheets) {
      @include themed-stylesheets($mat-theme);
    }

     /* different typography based on the theme -  */
     @include mat.all-component-typographies($typography);
     /* custom typography rem */
     @include mat.core($custom-typography);
 
     .density-0 {
      //  @include mat.toolbar-theme-density(0)
      // @include mat.form-field-density(0);
      //  @include mat._density(0);
     }
    //  .density-1 {
    //   // @include mat.toolbar-theme-density(-1);
    //    @include mat.form-field-density(-1);
    //    @include mat.button-density(-1);
    //  }
    //  .density-2 {
    //   // @include mat.toolbar-theme.density(-2);
    //    @include mat.form-field-density(-2);
    //    @include mat.button-density(-2);
    //  }
    //  .density-3 {
    //   // @include mat.toolbar-theme-density(-3);
    //   @include mat.form-field-density(-3);
    //   @include mat.button-density(-3);
    //  }
     
     // common styles
     .item.active .sb-icon {
       background: #fff !important;
     }
  }
 }

    // Dark-themes:
    // @if $light-or-dark==''or $light-or-dark=='dark'or $light-or-dark=='d'or $light-or-dark=='both' {
    //   .#{$css-class}-dark {
    //     $mat-theme: mat-dark-theme($primary, $accent, $warn);
    //     @include angular-material-theme($mat-theme);

    //     @if mixin-exists(themed-stylesheets) {
    //       @include themed-stylesheets($mat-theme);
    //     }
    //   }
    // }

    // Below stylesheets have been used in theme-switcher-tool (in the toolbar):
    .theme-primary.#{$css-class} {
      background-color: mat-color($primary);
    }

    .theme-accent.#{$css-class} {
      background-color: mat-color($accent);
    }

    .theme-warn.#{$css-class} {
      background-color: mat-color($warn);
    }


  /* theme button */
  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-background {
    fill: map-get($background, background);
  }
  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-button {
    fill: mat-color($accent, 500);
  }
  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-toolbar {
    fill: mat-color($primary, 500);
  }


  }
}




/**
 * // IMPORTANT NOTE: This mixin is just for other elements (non-material elements) that you want use material themes
 * // for them. If you don't have such elements, simply remove this mixin.
 *
 * This is a *callback-mixin* and will be called in `make-stylesheets` with a argument ($mat-theme). The schema of this
 * only argument would be:
 *   {
 *     primary: mat-palette,
 *     accent:  mat-palette,
 *     warn:    mat-palette,
 *     background: mat-theme-background,
 *     foreground: mat-theme-foreground,
 *     is-dark: boolean,
 *   }
 */
 @mixin themed-stylesheets($mat-theme) {
    // We only need "primary-color" and "accent-color" in this example. So commented out other (not-necessary)
    // things. Uncomment each you need.
  
    $primary: map-get($mat-theme, primary);
    $accent: map-get($mat-theme, accent);
    //$warn: map-get($mat-theme, warn);
    //$background: map-get($mat-theme, background);
    //$foreground: map-get($mat-theme, foreground);
  
    $primary-color: mat-color($primary);
    $accent-color: mat-color($accent);
    //$warn-color: mat-color($warn);
  
    //// Background colors:
    //$status-bar-color:               map-get($background, 'status-bar'              );
    //$app-bar-color:                  map-get($background, 'app-bar'                 );
    //$background-color:               map-get($background, 'background'              );
    //$hover-color:                    map-get($background, 'hover'                   );
    //$card-color:                     map-get($background, 'card'                    );
    //$dialog-color:                   map-get($background, 'dialog'                  );
    //$disabled-button-color:          map-get($background, 'disabled-button'         );
    //$raised-button-color:            map-get($background, 'raised-button'           );
    //$focused-button-color:           map-get($background, 'focused-button'          );
    //$selected-button-color:          map-get($background, 'selected-button'         );
    //$selected-disabled-button-color: map-get($background, 'selected-disabled-button');
    //$disabled-button-toggle-color:   map-get($background, 'disabled-button-toggle'  );
    //$unselected-chip-color:          map-get($background, 'unselected-chip'         );
    //$disabled-list-option-color:     map-get($background, 'disabled-list-option'    );
  
    //// Foreground colors:
    //$base-color:              map-get($foreground, 'base'             );
    //$divider-color:           map-get($foreground, 'divider'          );
    //$dividers-color:          map-get($foreground, 'dividers'         );
    //$disabled-color:          map-get($foreground, 'disabled'         );
    //$disabled-button-color:   map-get($foreground, 'disabled-button'  );
    //$disabled-text-color:     map-get($foreground, 'disabled-text'    );
    //$elevation-color:         map-get($foreground, 'elevation'        );
    //$hint-text-color:         map-get($foreground, 'hint-text'        );
    //$secondary-text-color:    map-get($foreground, 'secondary-text'   );
    //$icon-color:              map-get($foreground, 'icon'             );
    //$icons-color:             map-get($foreground, 'icons'            );
    //$text-color:              map-get($foreground, 'text'             );
    //$slider-min-color:        map-get($foreground, 'slider-min'       );
    //$slider-off-color:        map-get($foreground, 'slider-off'       );
    //$slider-off-active-color: map-get($foreground, 'slider-off-active');
  
    //$is-dark: map-get($mat-theme, is-dark);
  
    // Define themed-stylesheets here:
    .themed-element {
      background: $primary-color;
      color: $accent-color;
    }
  }
  
  // Import the module and do the job:
  @import './themes-core';
  @include make-stylesheets($app-themes);