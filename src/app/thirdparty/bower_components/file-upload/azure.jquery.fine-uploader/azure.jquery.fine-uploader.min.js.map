{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/azure/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/azure/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/azure/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","fineUploaderAzure","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","azure","util","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","_getPrefixedParamName","getParamsAsHeaders","headerName","parseAzureError","codeTag","messageTag","domParser","DOMParser","responseDoc","parseFromString","errorTag","errorDetails","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","signature","blobProperties","minFileSize","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","handleSuccessResponse","parsedResponse","pendingRequests","responseJson","successIndicator","failureIndicator","codes","endpoints","promises","endpointHandler","Content-Type","createBlockId","partNum","zeros","digits","paddedPartNum","btoa","blockId","createRequestBody","doc","implementation","createDocument","latestEl","latestTextEl","createTextNode","XMLSerializer","serializeToString","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"azure.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in Azure mode,\n * you need to specify an `endpointType` with a value of \"azure\", and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to Azure as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderAzure = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate Azure-namespace modules.\n            optionsOrCommand.endpointType = \"azure\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.14.5\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    customHeaders: this._options.signature.customHeaders,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx) {\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}