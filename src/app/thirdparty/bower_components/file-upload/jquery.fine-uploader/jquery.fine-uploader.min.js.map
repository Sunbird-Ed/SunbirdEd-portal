{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.14.5\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}